{"version":3,"sources":["actions/types.js","reducers/store.js","reducers/app.js","reducers/receipts.js","reducers/issueCards.js","reducers/index.js","actions/store.js","urls.js","actions/receipts.js","actions/issueCards.js","actions/app.js","components/Navigation.js","components/Store/DateSeachBox.js","components/Store/Store.js","utilities/utils.js","components/Store/AddStoreItem.js","components/Receipts/Receipts.js","components/UI/Backdrop.js","components/UI/Modal.js","components/Receipts/ReceiptItemForm.js","components/Receipts/Receipt.js","components/Receipts/ReceiptHeaderForm.js","components/IssueCards/IssueCards.js","components/IssueCards/IssueCardItemForm.js","components/IssueCards/IssueCard.js","components/IssueCards/IssueCardHeaderForm.js","components/Landing.js","components/SearchBox.js","components/App.js","index.js"],"names":["REQUEST_FAILED","REQUEST_SUCCEEDED","INITIAL_STATE","items","currentDate","selectedDate","itemsSubset","error","message","loading","activeLink","showModal","selectedItem","combineReducers","store","state","arguments","length","undefined","action","type","Object","objectSpread","changeToCurrentState","_ref","date","fetchSubsetData","_ref6","id","amount","increase","updatedItems","toConsumableArray","updatedItemIdx","findIndex","it","updatedItem","available","updateStoreItemAmount","_ref2","fetchStoreData","_ref3","item","sold","bought","concat","addStoreItem","_ref4","idx","i","updateStoreItem","_ref5","filter","deleteStoreItem","app","toggleModal","linkname","setActiveLink","requestInitialized","requestFailed","requestSucceeded","dismissError","dismissMessage","receipts","_ref8","deleteReceipt","_ref7","receiptId","storeItemId","find","updatedItemStoreItems","storeItems","deleteReceiptItem","name","code","inp_price","addReceiptItem","updateReceipt","addReceipt","changeSelectedReceipt","push","fetchReceipt","existingItem","fetchReceipts","issueCards","deleteIssueCard","issueCardId","deleteIssueCardItem","addIssueCardItem","updateIssueCard","addIssueCard","changeSelectedIssueCard","fetchIssueCard","fetchIssueCards","storeAxios","axios","create","baseURL","baseUrl","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","res","wrap","_context2","prev","next","get","sent","data","t0","stop","this","_x2","apply","receiptAxios","_callee","_context","_x","issueCardAxios","getClassName","currentItem","activeItem","Navigation","react_default","createElement","className","Link","props","to","Component","connect","DateSearchBox","inputChangeHandler","event","_this","setState","target","value","submitFormHandler","preventDefault","onFetchSubsetData","changeToCurrentStateHandler","onChangeToCurrentState","onSubmit","onChange","required","onClick","actions","Store","deleteItemHandler","onDeleteStoreItem","onFetchStoreData","onSetActiveLink","_this2","map","key","sellingPrice","bind","renderItems","DateSeachBox","renderHeader","_callee5","_context5","delete","_x5","parseQueryString","url","query","split","reduce","acc","v","parts","AddStoreItem","fields","update","fieldName","updatedFields","formSubmitHandler","openedInModal","onAddStoreItem","onToggleModal","onUpdateStoreItem","history","replace","prefillData","location","search","attachedWrapperClasses","join","htmlFor","autoFocus","step","cb","_callee3","_context3","post","insertId","_x3","_callee4","_context4","_x4","Receipt","onFetchReceipt","card","identifier","company","price","renderReceipt","children","ReceiptItemForm","_this$setState","_this$validateForm","validateForm","defineProperty","storeItem","onAddReceiptItem","hideFormHandler","createStoreItemHandler","nextProps","nextState","_this$validateCode","validateCode","includes","Backdrop","UI_Modal","Store_AddStoreItem","Fragment","renderModal","IssueCards","pathname","showForm","deleteReceiptHandler","selectedReceipt","alert","onDeleteReceipt","onChangeSelectedReceipt","_this3","onDeleteReceiptItem","renderReceiptStoreItems","_this4","Receipts_ReceiptItemForm","prevState","onFetchReceipts","_callee6","reqestedItem","_context6","_x6","_callee7","_context7","_x7","ReceiptHeaderForm","onUpdateReceipt","onAddReceipts","_parseQueryString","receiptIdentifiers","receiver","receipt","onFetchIssueCards","renderIssueCards","IssueCardItemForm","onAddIssueCardItem","deleteIssueCardHandler","selectedIssueCard","onDeleteIssueCard","console","log","onChangeSelectedIssueCard","onFetchIssueCard","onDeleteIssueCardItem","renderIssueCardStoreItems","renderIssueCard","IssueCards_IssueCardItemForm","IssueCardHeaderForm","onUpdateIssueCard","onAddIssueCard","issueCardIdentifiers","issueCard","Landing","magicStrings","NAME","CODE","SearchBox","opened","searchString","found","searchBy","foundItems","findItems","changeSearchHandler","option","newSearchByOption","allItems","toLowerCase","result","toUpperCase","forEach","findItemsByName","findItemsByCode","renderFoundItems","renderFoundItemsBox","placeholder","renderOpenButton","renderForm","App","onDismissError","onDismissMessage","BrowserRouter","components_Navigation","renderError","renderMessage","Route","exact","path","component","Receipts","IssueCard","components_SearchBox","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","thunk","react_redux_es","components_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1237ba0.chunk.js","sourcesContent":["export const FETCH_STORE_DATA = 'FETCH_STORE_DATA';\nexport const ADD_STORE_ITEM = 'ADD_STORE_ITEM';\nexport const UPDATE_STORE_ITEM = 'UPDATE_STORE_ITEM';\nexport const DELETE_STORE_ITEM = 'DELETE_STORE_ITEM';\nexport const UPDATE_STORE_ITEM_AMOUNT = 'UPDATE_STORE_ITEM_AMOUNT';\n\nexport const FETCH_SUBSET_DATA = 'FETCH_SUBSET_DATA';\nexport const CHANGE_TO_CURRENT_STATE = 'CHANGE_TO_CURRENT_STATE';\n\nexport const FETCH_RECEIPTS = 'FETCH_RECEIPTS';\nexport const FETCH_RECEIPT = 'FETCH_RECEIPT';\nexport const CHANGE_SELECTED_RECEIPT = 'CHANGE_SELECTED_RECEIPT';\nexport const ADD_RECEIPT_HEADER = 'ADD_RECEIPT_HEADER';\nexport const UPDATE_RECEIPT_HEADER = 'UPDATE_RECEIPT_HEADER';\nexport const ADD_RECEIPT_ITEM = 'ADD_RECEIPT_ITEM';\nexport const DELETE_RECEIPT_ITEM = 'DELETE_RECEIPT_ITEM';\nexport const DELETE_RECEIPT = 'DELETE_RECEIPT';\n\nexport const FETCH_ISSUE_CARDS = 'FETCH_ISSUE_CARDS';\nexport const FETCH_ISSUE_CARD = 'FETCH_ISSUE_CARD';\nexport const CHANGE_SELECTED_ISSUE_CARD = 'CHANGE_SELECTED_ISSUE_CARD';\nexport const ADD_ISSUE_CARD_HEADER = 'ADD_ISSUE_CARD_HEADER';\nexport const UPDATE_ISSUE_CARD_HEADER = 'UPDATE_ISSUE_CARD_HEADER';\nexport const ADD_ISSUE_CARD_ITEM = 'ADD_ISSUE_CARD_ITEM';\nexport const DELETE_ISSUE_CARD_ITEM = 'DELETE_ISSUE_CARD_ITEM';\nexport const DELETE_ISSUE_CARD = 'DELETE_ISSUE_CARD';\n\nexport const REQUEST_FAILED = 'REQUEST_FAILED';\nexport const REQUEST_INITIALIZED = 'REQUEST_INITIALIZED';\nexport const REQUEST_SUCCEEDED = 'REQUEST_SUCCEEDED';\nexport const DISMISS_ERROR = 'DISMISS_ERROR';\nexport const DISMISS_MESSAGE = 'DISMISS_MESSAGE';\nexport const SET_ACTIVE_LINK = 'SET_ACTIVE_LINK';\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\n","import {\n    FETCH_STORE_DATA,\n    ADD_STORE_ITEM,\n    DELETE_STORE_ITEM,\n    UPDATE_STORE_ITEM,\n    UPDATE_STORE_ITEM_AMOUNT,\n    FETCH_SUBSET_DATA,\n    CHANGE_TO_CURRENT_STATE\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n    items: [],\n    currentDate: true,\n    selectedDate: '',\n    itemsSubset: []\n};\n\nconst fetchSubsetData = (state, { items, date }) => {\n    return {\n        ...state,\n        currentDate: false,\n        itemsSubset: items,\n        selectedDate: date\n    };\n};\n\nconst changeToCurrentState = state => {\n    return {\n        ...state,\n        currentDate: true,\n        selectedDate: ''\n    };\n};\n\nconst fetchStoreData = (state, { items }) => {\n    return {\n        ...state,\n        items\n    };\n};\n\nconst addStoreItem = (state, { item }) => {\n    item.sold = 0;\n    item.bought = 0;\n    const items = [...state.items, item];\n    return {\n        ...state,\n        items\n    };\n};\n\nconst updateStoreItem = (state, { item }) => {\n    const items = [...state.items];\n    const idx = items.findIndex(i => i.id === item.id);\n    items[idx] = item;\n    return {\n        ...state,\n        items\n    };\n};\n\nconst deleteStoreItem = (state, { id }) => {\n    const items = state.items.filter(item => item.id !== id);\n    return {\n        ...state,\n        items\n    };\n};\n\nconst updateStoreItemAmount = (state, { id, amount, increase }) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = updatedItems.findIndex(it => it.id === id);\n    const updatedItem = { ...updatedItems[updatedItemIdx] };\n\n    if (increase) {\n        updatedItem.available += +amount;\n    } else {\n        updatedItem.available -= +amount;\n    }\n    updatedItems[updatedItemIdx] = updatedItem;\n\n    return {\n        ...state,\n        items: updatedItems\n    };\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CHANGE_TO_CURRENT_STATE:\n            return changeToCurrentState(state, action);\n        case FETCH_SUBSET_DATA:\n            return fetchSubsetData(state, action);\n        case UPDATE_STORE_ITEM_AMOUNT:\n            return updateStoreItemAmount(state, action);\n        case FETCH_STORE_DATA:\n            return fetchStoreData(state, action);\n        case ADD_STORE_ITEM:\n            return addStoreItem(state, action);\n        case UPDATE_STORE_ITEM:\n            return updateStoreItem(state, action);\n        case DELETE_STORE_ITEM:\n            return deleteStoreItem(state, action);\n        default:\n            return state;\n    }\n};\n","import {\n    REQUEST_FAILED,\n    REQUEST_INITIALIZED,\n    REQUEST_SUCCEEDED,\n    DISMISS_ERROR,\n    DISMISS_MESSAGE,\n    SET_ACTIVE_LINK,\n    TOGGLE_MODAL\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n    error: '',\n    message: '',\n    loading: false,\n    activeLink: '',\n    showModal: false\n};\n\nconst requestFailed = (state, { error }) => {\n    return {\n        ...state,\n        loading: false,\n        error\n    };\n};\n\nconst requestInitialized = state => {\n    return {\n        ...state,\n        loading: true,\n        error: '',\n        message: ''\n    };\n};\n\nconst requestSucceeded = (state, { message }) => {\n    return {\n        ...state,\n        message,\n        error: '',\n        loading: false\n    };\n};\n\nconst dismissError = state => {\n    return {\n        ...state,\n        error: ''\n    };\n};\n\nconst dismissMessage = state => {\n    return {\n        ...state,\n        message: ''\n    };\n};\n\nconst setActiveLink = (state, { linkname }) => {\n    return {\n        ...state,\n        activeLink: linkname\n    };\n};\n\nconst toggleModal = (state, { showModal }) => {\n    return {\n        ...state,\n        showModal\n    };\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case TOGGLE_MODAL:\n            return toggleModal(state, action);\n        case SET_ACTIVE_LINK:\n            return setActiveLink(state, action);\n        case REQUEST_INITIALIZED:\n            return requestInitialized(state, action);\n        case REQUEST_FAILED:\n            return requestFailed(state, action);\n        case REQUEST_SUCCEEDED:\n            return requestSucceeded(state, action);\n        case DISMISS_ERROR:\n            return dismissError(state, action);\n        case DISMISS_MESSAGE:\n            return dismissMessage(state, action);\n        default:\n            return state;\n    }\n};\n","import {\n    FETCH_RECEIPTS,\n    FETCH_RECEIPT,\n    CHANGE_SELECTED_RECEIPT,\n    ADD_RECEIPT_HEADER,\n    UPDATE_RECEIPT_HEADER,\n    ADD_RECEIPT_ITEM,\n    DELETE_RECEIPT_ITEM,\n    DELETE_RECEIPT\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n    items: [],\n    selectedItem: null\n};\n\nconst fetchReceipts = (state, { items }) => {\n    const existingItem = state.items[0];\n    let updatedItems;\n    if (existingItem) {\n        updatedItems = [\n            ...state.items.filter(it => it.id !== existingItem.id),\n            existingItem\n        ];\n    } else {\n        updatedItems = items;\n    }\n    return {\n        ...state,\n        items: updatedItems\n    };\n};\n\nconst fetchReceipt = (state, { item }) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = updatedItems.findIndex(it => +item.id === it.id);\n    let updatedItem;\n    if (updatedItemIdx > -1) {\n        updatedItem = { ...updatedItems[updatedItemIdx] };\n        updatedItem.storeItems = item.storeItems;\n        updatedItems[updatedItemIdx] = updatedItem;\n    } else {\n        updatedItem = item;\n        updatedItems.push(item);\n    }\n\n    return {\n        ...state,\n        items: updatedItems,\n        selectedItem: item\n    };\n};\n\nconst changeSelectedReceipt = (state, { id }) => {\n    const item = state.items.find(item => item.id === id);\n    return {\n        ...state,\n        selectedItem: item\n    };\n};\n\nconst addReceipt = (state, { item }) => {\n    const items = [...state.items, item];\n    return {\n        ...state,\n        items\n    };\n};\n\nconst updateReceipt = (state, { item }) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = state.items.findIndex(it => it.id === item.id);\n    const updatedItem = {\n        ...state.items.find(it => it.id === item.id),\n        ...item\n    };\n\n    updatedItems[updatedItemIdx] = updatedItem;\n    return {\n        ...state,\n        items: updatedItems\n    };\n};\n\nconst addReceiptItem = (\n    state,\n    { receiptId, storeItemId, name, code, amount, inp_price }\n) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = updatedItems.findIndex(it => it.id === receiptId);\n    const updatedItem = { ...updatedItems[updatedItemIdx] };\n\n    if (!updatedItem.storeItems) {\n        updatedItem.storeItems = [];\n    }\n    const updatedItemStoreItems = [\n        ...updatedItem.storeItems,\n        { id: storeItemId, code, name, amount, inp_price }\n    ];\n\n    updatedItem.storeItems = updatedItemStoreItems;\n    updatedItems[updatedItemIdx] = updatedItem;\n\n    return {\n        ...state,\n        items: updatedItems,\n        selectedItem: updatedItem\n    };\n};\n\nconst deleteReceiptItem = (state, { receiptId, storeItemId }) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = updatedItems.findIndex(it => +it.id === +receiptId);\n    const updatedItem = updatedItems.find(it => +it.id === +receiptId);\n    const updatedItemStoreItems = updatedItem.storeItems.filter(\n        it => it.id !== storeItemId\n    );\n\n    updatedItem.storeItems = updatedItemStoreItems;\n    updatedItems[updatedItemIdx] = updatedItem;\n\n    return {\n        ...state,\n        items: updatedItems,\n        selectedItem: updatedItem\n    };\n};\n\nconst deleteReceipt = (state, { id }) => {\n    const updatedItems = state.items.filter(it => it.id !== id);\n    return {\n        ...state,\n        items: updatedItems\n    };\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case DELETE_RECEIPT:\n            return deleteReceipt(state, action);\n        case DELETE_RECEIPT_ITEM:\n            return deleteReceiptItem(state, action);\n        case ADD_RECEIPT_ITEM:\n            return addReceiptItem(state, action);\n        case UPDATE_RECEIPT_HEADER:\n            return updateReceipt(state, action);\n        case ADD_RECEIPT_HEADER:\n            return addReceipt(state, action);\n        case CHANGE_SELECTED_RECEIPT:\n            return changeSelectedReceipt(state, action);\n        case FETCH_RECEIPT:\n            return fetchReceipt(state, action);\n        case FETCH_RECEIPTS:\n            return fetchReceipts(state, action);\n        default:\n            return state;\n    }\n};\n","import {\n    FETCH_ISSUE_CARDS,\n    FETCH_ISSUE_CARD,\n    CHANGE_SELECTED_ISSUE_CARD,\n    ADD_ISSUE_CARD_HEADER,\n    UPDATE_ISSUE_CARD_HEADER,\n    ADD_ISSUE_CARD_ITEM,\n    DELETE_ISSUE_CARD_ITEM,\n    DELETE_ISSUE_CARD\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n    items: [],\n    selectedItem: null\n};\n\nconst fetchIssueCards = (state, { items }) => {\n    const existingItem = state.items[0];\n    let updatedItems;\n    if (existingItem) {\n        updatedItems = [\n            ...state.items.filter(it => it.id !== existingItem.id),\n            existingItem\n        ];\n    } else {\n        updatedItems = items;\n    }\n    return {\n        ...state,\n        items: updatedItems\n    };\n};\n\nconst fetchIssueCard = (state, { item }) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = updatedItems.findIndex(it => +item.id === it.id);\n    let updatedItem;\n    if (updatedItemIdx > -1) {\n        updatedItem = { ...updatedItems[updatedItemIdx] };\n        updatedItem.storeItems = item.storeItems;\n        updatedItems[updatedItemIdx] = updatedItem;\n    } else {\n        updatedItem = item;\n        updatedItems.push(item);\n    }\n\n    return {\n        ...state,\n        items: updatedItems,\n        selectedItem: item\n    };\n};\n\nconst changeSelectedIssueCard = (state, { id }) => {\n    const item = state.items.find(item => item.id === id);\n    return {\n        ...state,\n        selectedItem: item\n    };\n};\n\nconst addIssueCard = (state, { item }) => {\n    const items = [...state.items, item];\n    return {\n        ...state,\n        items\n    };\n};\n\nconst updateIssueCard = (state, { item }) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = state.items.findIndex(it => it.id === item.id);\n    const updatedItem = {\n        ...state.items.find(it => it.id === item.id),\n        ...item\n    };\n\n    updatedItems[updatedItemIdx] = updatedItem;\n    return {\n        ...state,\n        items: updatedItems\n    };\n};\n\nconst addIssueCardItem = (\n    state,\n    { issueCardId, storeItemId, name, code, amount }\n) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = updatedItems.findIndex(it => it.id === issueCardId);\n    const updatedItem = { ...updatedItems[updatedItemIdx] };\n    if (!updatedItem.storeItems) {\n        updatedItem.storeItems = [];\n    }\n    const updatedItemStoreItems = [\n        ...updatedItem.storeItems,\n        { id: storeItemId, code, name, amount }\n    ];\n\n    updatedItem.storeItems = updatedItemStoreItems;\n    updatedItems[updatedItemIdx] = updatedItem;\n    return {\n        ...state,\n        items: updatedItems,\n        selectedItem: updatedItem\n    };\n};\n\nconst deleteIssueCardItem = (state, { issueCardId, storeItemId }) => {\n    const updatedItems = [...state.items];\n    const updatedItemIdx = updatedItems.findIndex(\n        it => +it.id === +issueCardId\n    );\n    const updatedItem = updatedItems.find(it => +it.id === +issueCardId);\n    const updatedItemStoreItems = updatedItem.storeItems.filter(\n        it => it.id !== storeItemId\n    );\n\n    updatedItem.storeItems = updatedItemStoreItems;\n    updatedItems[updatedItemIdx] = updatedItem;\n\n    return {\n        ...state,\n        items: updatedItems,\n        selectedItem: updatedItem\n    };\n};\n\nconst deleteIssueCard = (state, { id }) => {\n    const updatedItems = state.items.filter(it => it.id !== id);\n    return {\n        ...state,\n        items: updatedItems\n    };\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case DELETE_ISSUE_CARD:\n            return deleteIssueCard(state, action);\n        case DELETE_ISSUE_CARD_ITEM:\n            return deleteIssueCardItem(state, action);\n        case ADD_ISSUE_CARD_ITEM:\n            return addIssueCardItem(state, action);\n        case UPDATE_ISSUE_CARD_HEADER:\n            return updateIssueCard(state, action);\n        case ADD_ISSUE_CARD_HEADER:\n            return addIssueCard(state, action);\n        case CHANGE_SELECTED_ISSUE_CARD:\n            return changeSelectedIssueCard(state, action);\n        case FETCH_ISSUE_CARD:\n            return fetchIssueCard(state, action);\n        case FETCH_ISSUE_CARDS:\n            return fetchIssueCards(state, action);\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\n\nimport storeReducer from './store';\nimport appReducer from './app';\nimport receiptsReducer from './receipts';\nimport issueCardsReducer from './issueCards';\n\nexport default combineReducers({\n    store: storeReducer,\n    app: appReducer,\n    receipts: receiptsReducer,\n    issueCards: issueCardsReducer\n});\n","import axios from 'axios';\n\nimport {\n    REQUEST_FAILED,\n    REQUEST_INITIALIZED,\n    FETCH_STORE_DATA,\n    ADD_STORE_ITEM,\n    DELETE_STORE_ITEM,\n    UPDATE_STORE_ITEM,\n    REQUEST_SUCCEEDED,\n    FETCH_SUBSET_DATA,\n    CHANGE_TO_CURRENT_STATE\n} from './types';\nimport { storeBaseUrl } from '../urls';\n\nconst storeAxios = axios.create({\n    baseURL: storeBaseUrl\n});\n\nexport const fetchSubsetData = date => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const res = await storeAxios(`?date=${date}`);\n        dispatch({ type: FETCH_SUBSET_DATA, items: res.data, date });\n        dispatch({ type: REQUEST_SUCCEEDED });\n    } catch (error) {\n        dispatch({ type: REQUEST_FAILED, error: 'nepodarilo sa ziskat data' });\n    }\n};\n\nexport const changeToCurrentState = () => {\n    return { type: CHANGE_TO_CURRENT_STATE };\n};\n\nexport const fetchStoreData = () => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const res = await storeAxios.get('');\n        dispatch({ type: FETCH_STORE_DATA, items: res.data });\n        dispatch({ type: REQUEST_SUCCEEDED, message: '' });\n    } catch (error) {\n        dispatch({ type: REQUEST_FAILED, error: 'nepodarilo sa ziskat data' });\n    }\n};\n\nexport const addStoreItem = (\n    code,\n    name,\n    sellingPrice,\n    cb\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const item = { code, name, sellingPrice };\n        const res = await storeAxios.post('', item);\n        item.id = res.data.insertId;\n\n        dispatch({ type: ADD_STORE_ITEM, item });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: `polozka [${item.code} - ${\n                item.name\n            }] bola uspesne pridana`\n        });\n\n        if (typeof cb === 'function') {\n            cb();\n        }\n    } catch (error) {\n        dispatch({ type: REQUEST_FAILED, error: 'pridanie polozky zlyhalo' });\n    }\n};\n\nexport const updateStoreItem = (\n    id,\n    code,\n    name,\n    sellingPrice,\n    cb\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const item = { id: +id, code, name, sellingPrice: +sellingPrice };\n        await storeAxios.post('/update', item);\n\n        dispatch({ type: UPDATE_STORE_ITEM, item });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: `polozka [${item.code} - ${\n                item.name\n            }] bola uspesne upravena`\n        });\n\n        if (typeof cb === 'function') {\n            cb();\n        }\n    } catch (error) {\n        dispatch({ type: REQUEST_FAILED, error: 'uprava polozky zlyhala' });\n    }\n};\n\nexport const deleteStoreItem = id => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        await storeAxios.delete(`/${id}`);\n        dispatch({ type: DELETE_STORE_ITEM, id });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: `polozka bola uspesne odstranena`\n        });\n    } catch (error) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error:\n                'odstanenie polozky zlyhalo, na polozku sa odkazuje iny dokument'\n        });\n    }\n};\n","// const baseUrl = 'http://localhost:5000';\nconst baseUrl = 'http://ec2-54-87-42-106.compute-1.amazonaws.com:5000';\n\nexport const storeBaseUrl = baseUrl + '/goods';\nexport const receiptsUrl = baseUrl + '/receipts';\nexport const issueCardsUrl = baseUrl + '/issue-cards';\n","import axios from 'axios';\n\nimport {\n    FETCH_RECEIPTS,\n    FETCH_RECEIPT,\n    REQUEST_INITIALIZED,\n    REQUEST_FAILED,\n    REQUEST_SUCCEEDED,\n    CHANGE_SELECTED_RECEIPT,\n    ADD_RECEIPT_HEADER,\n    UPDATE_RECEIPT_HEADER,\n    ADD_RECEIPT_ITEM,\n    DELETE_RECEIPT_ITEM,\n    UPDATE_STORE_ITEM_AMOUNT,\n    DELETE_RECEIPT\n} from './types';\nimport { receiptsUrl } from '../urls';\n\nconst receiptAxios = axios.create({\n    baseURL: receiptsUrl\n});\n\nexport const fetchReceipts = () => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const res = await receiptAxios();\n        dispatch({ type: FETCH_RECEIPTS, items: res.data });\n        dispatch({ type: REQUEST_SUCCEEDED, message: '' });\n    } catch (err) {\n        dispatch({ type: REQUEST_FAILED, error: 'nepodarilo sa ziskat data' });\n    }\n};\n\nexport const fetchReceipt = id => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const res = await receiptAxios(`/${id}`);\n        dispatch({ type: FETCH_RECEIPT, item: res.data });\n        dispatch({ type: REQUEST_SUCCEEDED, message: '' });\n    } catch (err) {\n        dispatch({ type: REQUEST_FAILED, error: 'nepodarilo sa ziskat data' });\n    }\n};\n\nexport const addReceiptHeader = (\n    identifier,\n    company,\n    date,\n    price,\n    cb\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const receipt = { identifier, company, date, price };\n        const res = await receiptAxios.post(``, receipt);\n        receipt.id = res.data.insertId;\n\n        dispatch({ type: ADD_RECEIPT_HEADER, item: receipt });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'prijemka bola uspesne vytvorena'\n        });\n\n        if (typeof cb === 'function') {\n            cb(receipt.id);\n        }\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa vytvorit prijemku'\n        });\n    }\n};\n\nexport const updateReceiptHeader = (\n    id,\n    identifier,\n    company,\n    date,\n    price,\n    cb\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const receipt = { id, identifier, company, date, price };\n        await receiptAxios.post(`/update`, {\n            receiptId: id,\n            identifier,\n            company,\n            date,\n            price\n        });\n\n        dispatch({ type: UPDATE_RECEIPT_HEADER, item: receipt });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'prijemka bola uspesne upravena'\n        });\n\n        if (typeof cb === 'function') {\n            cb(id);\n        }\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa upravit prijemku'\n        });\n    }\n};\n\nexport const addReceiptItem = (\n    receiptId,\n    storeItemId,\n    amount,\n    name,\n    code,\n    inp_price,\n    cb\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        await receiptAxios.post(`/field`, {\n            receiptId,\n            storeItemId,\n            amount,\n            inp_price\n        });\n\n        dispatch({\n            type: ADD_RECEIPT_ITEM,\n            receiptId,\n            storeItemId,\n            amount,\n            name,\n            code,\n            inp_price\n        });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'polozka bola uspesne pridana'\n        });\n        dispatch({\n            type: UPDATE_STORE_ITEM_AMOUNT,\n            id: storeItemId,\n            amount,\n            increase: true\n        });\n\n        if (typeof cb === 'function') {\n            cb();\n        }\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa pridat polozku'\n        });\n    }\n};\n\nexport const deleteReceiptItem = (\n    receiptId,\n    storeItemId,\n    amount\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const reqestedItem = { receiptId, storeItemId };\n        await receiptAxios.delete(`/field`, { data: reqestedItem });\n\n        dispatch({ type: DELETE_RECEIPT_ITEM, ...reqestedItem });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'polozka bola uspesne odstranena'\n        });\n        dispatch({\n            type: UPDATE_STORE_ITEM_AMOUNT,\n            id: storeItemId,\n            amount,\n            increase: false\n        });\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa odstranit polozku'\n        });\n    }\n};\n\nexport const deleteReceipt = (id, cb) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        await receiptAxios.delete(`/`, { data: { id } });\n\n        dispatch({ type: DELETE_RECEIPT, id });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'prijemka bola uspesne odstranena'\n        });\n        if (typeof cb === 'function') {\n            cb();\n        }\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa odstranit prijemku'\n        });\n    }\n};\n\nexport const changeSelectedReceipt = id => {\n    return {\n        type: CHANGE_SELECTED_RECEIPT,\n        id\n    };\n};\n","import axios from 'axios';\n\nimport {\n    FETCH_ISSUE_CARDS,\n    FETCH_ISSUE_CARD,\n    REQUEST_INITIALIZED,\n    REQUEST_FAILED,\n    REQUEST_SUCCEEDED,\n    CHANGE_SELECTED_ISSUE_CARD,\n    ADD_ISSUE_CARD_HEADER,\n    UPDATE_ISSUE_CARD_HEADER,\n    ADD_ISSUE_CARD_ITEM,\n    DELETE_ISSUE_CARD_ITEM,\n    UPDATE_STORE_ITEM_AMOUNT,\n    DELETE_ISSUE_CARD\n} from './types';\nimport { issueCardsUrl } from '../urls';\n\nconst issueCardAxios = axios.create({\n    baseURL: issueCardsUrl\n});\n\nexport const fetchIssueCards = () => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const res = await issueCardAxios();\n        dispatch({ type: FETCH_ISSUE_CARDS, items: res.data });\n        dispatch({ type: REQUEST_SUCCEEDED, message: '' });\n    } catch (err) {\n        dispatch({ type: REQUEST_FAILED, error: 'nepodarilo sa ziskat data' });\n    }\n};\n\nexport const fetchIssueCard = id => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const res = await issueCardAxios(`/${id}`);\n        dispatch({ type: FETCH_ISSUE_CARD, item: res.data });\n        dispatch({ type: REQUEST_SUCCEEDED, message: '' });\n    } catch (err) {\n        dispatch({ type: REQUEST_FAILED, error: 'nepodarilo sa ziskat data' });\n    }\n};\n\nexport const addIssueCardHeader = (\n    identifier,\n    receiver,\n    date,\n    cb\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const issueCard = { identifier, receiver, date };\n        const res = await issueCardAxios.post(``, issueCard);\n        issueCard.id = res.data.insertId;\n\n        dispatch({ type: ADD_ISSUE_CARD_HEADER, item: issueCard });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'vydajka bola uspesne vytvorena'\n        });\n\n        if (typeof cb === 'function') {\n            cb(issueCard.id);\n        }\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa vytvorit vydajku'\n        });\n    }\n};\n\nexport const updateIssueCardHeader = (\n    id,\n    identifier,\n    receiver,\n    date,\n    cb\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const issueCard = { id, identifier, receiver, date };\n        await issueCardAxios.post(`/update`, {\n            issueCardId: id,\n            identifier,\n            receiver,\n            date\n        });\n\n        dispatch({ type: UPDATE_ISSUE_CARD_HEADER, item: issueCard });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'vydajka bola uspesne upravena'\n        });\n\n        if (typeof cb === 'function') {\n            cb(id);\n        }\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa upravit vydajku'\n        });\n    }\n};\n\nexport const addIssueCardItem = (\n    issueCardId,\n    storeItemId,\n    amount,\n    name,\n    code,\n    cb\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        await issueCardAxios.post(`/field`, {\n            issueCardId,\n            storeItemId,\n            amount\n        });\n\n        dispatch({\n            type: ADD_ISSUE_CARD_ITEM,\n            issueCardId,\n            storeItemId,\n            amount,\n            name,\n            code\n        });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'polozka bola uspesne pridana'\n        });\n        dispatch({\n            type: UPDATE_STORE_ITEM_AMOUNT,\n            id: storeItemId,\n            amount,\n            increase: false\n        });\n\n        if (typeof cb === 'function') {\n            cb();\n        }\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa pridat polozku'\n        });\n    }\n};\n\nexport const deleteIssueCardItem = (\n    issueCardId,\n    storeItemId,\n    amount\n) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        const reqestedItem = { issueCardId, storeItemId };\n        await issueCardAxios.delete(`/field`, { data: reqestedItem });\n\n        dispatch({ type: DELETE_ISSUE_CARD_ITEM, ...reqestedItem });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'polozka bola uspesne odstranena'\n        });\n        dispatch({\n            type: UPDATE_STORE_ITEM_AMOUNT,\n            id: storeItemId,\n            amount,\n            increase: true\n        });\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa odstranit polozku'\n        });\n    }\n};\n\nexport const deleteIssueCard = (id, cb) => async dispatch => {\n    dispatch({ type: REQUEST_INITIALIZED });\n\n    try {\n        await issueCardAxios.delete(`/`, { data: { id } });\n\n        dispatch({ type: DELETE_ISSUE_CARD, id });\n        dispatch({\n            type: REQUEST_SUCCEEDED,\n            message: 'vydajka bola uspesne odstranena'\n        });\n        if (typeof cb === 'function') {\n            cb();\n        }\n    } catch (err) {\n        dispatch({\n            type: REQUEST_FAILED,\n            error: 'nepodarilo sa odstranit vydajku'\n        });\n    }\n};\n\nexport const changeSelectedIssueCard = id => {\n    return {\n        type: CHANGE_SELECTED_ISSUE_CARD,\n        id\n    };\n};\n","import {\n    DISMISS_ERROR,\n    DISMISS_MESSAGE,\n    SET_ACTIVE_LINK,\n    TOGGLE_MODAL\n} from './types';\n\nexport const dismissError = () => {\n    return {\n        type: DISMISS_ERROR\n    };\n};\n\nexport const dismissMessage = () => {\n    return {\n        type: DISMISS_MESSAGE\n    };\n};\n\nexport const setActiveLink = linkname => {\n    return {\n        type: SET_ACTIVE_LINK,\n        linkname\n    };\n};\n\nexport const toggleModal = showModal => {\n    return {\n        type: TOGGLE_MODAL,\n        showModal\n    };\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nfunction getClassName(currentItem, activeItem) {\n    let activeLink = '';\n    if (activeItem === currentItem) {\n        activeLink = ' nav__link--active';\n    }\n    return 'nav__link' + activeLink;\n}\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <nav className=\"nav\">\n                <ul className=\"nav__list\">\n                    <li className=\"nav__item\">\n                        <Link\n                            className={getClassName('/', this.props.activeLink)}\n                            to=\"/\"\n                        >\n                            domov\n                        </Link>\n                    </li>\n                    <li className=\"nav__item nav__item--title\">SKLAD</li>\n                    <li className=\"nav__item\">\n                        <Link\n                            className={getClassName(\n                                'store',\n                                this.props.activeLink\n                            )}\n                            to=\"/store\"\n                        >\n                            zobrazit skladove polozky\n                        </Link>\n                    </li>\n                    <li className=\"nav__item\">\n                        <Link\n                            className={getClassName(\n                                'store_add',\n                                this.props.activeLink\n                            )}\n                            to=\"/store/add-item\"\n                        >\n                            pridat polozku\n                        </Link>\n                    </li>\n                    <li className=\"nav__item nav__item--title\">PRIJEMKY</li>\n                    <li className=\"nav__item\">\n                        <Link\n                            className={getClassName(\n                                'receipts',\n                                this.props.activeLink\n                            )}\n                            to=\"/receipts\"\n                        >\n                            zobrazit prijemky\n                        </Link>\n                    </li>\n                    <li className=\"nav__item\">\n                        <Link\n                            className={getClassName(\n                                'receipts_add',\n                                this.props.activeLink\n                            )}\n                            to=\"/receipts/add\"\n                        >\n                            vytvorit prijemku\n                        </Link>\n                    </li>\n                    <li className=\"nav__item nav__item--title\">VYDAJKY</li>\n                    <li className=\"nav__item\">\n                        <Link\n                            className={getClassName(\n                                'issueCards',\n                                this.props.activeLink\n                            )}\n                            to=\"/issue-cards\"\n                        >\n                            zobrazit vydajky\n                        </Link>\n                    </li>\n                    <li className=\"nav__item\">\n                        <Link\n                            className={getClassName(\n                                'issueCards_add',\n                                this.props.activeLink\n                            )}\n                            to=\"/issue-cards/add\"\n                        >\n                            vytvorit vydajku\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        activeLink: state.app.activeLink\n    };\n};\n\nexport default connect(mapStateToProps)(Navigation);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\n\nclass DateSearchBox extends Component {\n    state = {\n        date: ''\n    };\n\n    inputChangeHandler = event => {\n        this.setState({ date: event.target.value });\n    };\n\n    submitFormHandler = event => {\n        event.preventDefault();\n\n        if (this.state.date !== this.props.selectedDate) {\n            this.props.onFetchSubsetData(this.state.date);\n        }\n    };\n\n    changeToCurrentStateHandler = () => {\n        if (!this.props.currentDate) {\n            this.props.onChangeToCurrentState();\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"date-search-box\">\n                <p className=\"date-search-box__text\">\n                    <span className=\"date-search-box__text--darker\">\n                        stav ku dnu:{' '}\n                    </span>\n                    {this.props.currentDate\n                        ? 'dnesny den'\n                        : this.props.selectedDate}\n                </p>\n                <form onSubmit={this.submitFormHandler}>\n                    <input\n                        className=\"date-search-box__input\"\n                        type=\"date\"\n                        name=\"date\"\n                        value={this.state.date}\n                        onChange={this.inputChangeHandler}\n                        required\n                    />\n                    <button\n                        className=\"btn btn--outline-violet btn--small u-margin-left-xsm\"\n                        type=\"submit\"\n                    >\n                        zmenit datum\n                    </button>\n                </form>\n                <button\n                    className={\n                        this.props.currentDate\n                            ? 'btn btn--small u-margin-left-xsm'\n                            : 'btn btn--outline-violet btn--small u-margin-left-xsm'\n                    }\n                    onClick={this.changeToCurrentStateHandler}\n                >\n                    sucasny stav\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentDate: state.store.currentDate,\n        selectedDate: state.store.selectedDate\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onChangeToCurrentState: () => dispatch(actions.changeToCurrentState()),\n        onFetchSubsetData: date => dispatch(actions.fetchSubsetData(date))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DateSearchBox);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport DateSeatchBox from './DateSeachBox';\nimport * as actions from '../../actions';\n\nclass Store extends Component {\n    componentDidMount() {\n        if (!this.props.items || !this.props.items.length) {\n            this.props.onFetchStoreData();\n        }\n        this.props.onSetActiveLink('store');\n    }\n\n    deleteItemHandler = id => {\n        this.props.onDeleteStoreItem(id);\n    };\n\n    renderItems() {\n        if (this.props.currentDate) {\n            if (this.props.items) {\n                return this.props.items.map(item => (\n                    <div key={item.id} className=\"product-box__row\">\n                        <div className=\"product-box__col\">{item.code}</div>\n                        <div className=\"product-box__col\">{item.name}</div>\n                        <div className=\"product-box__col\">\n                            {item.sellingPrice}\n                        </div>\n                        <div className=\"product-box__col\">{item.available}</div>\n                        <div className=\"product-box__col\">\n                            <Link\n                                className=\"btn btn--small\"\n                                to={`/store/add-item?id=${item.id}&name=${\n                                    item.name\n                                }&code=${item.code}&selling-price=${\n                                    item.sellingPrice\n                                }`}\n                            >\n                                upravit\n                            </Link>\n                            <button\n                                className=\"btn btn--danger btn--small u-margin-left-xsm\"\n                                onClick={this.deleteItemHandler.bind(\n                                    null,\n                                    item.id\n                                )}\n                            >\n                                odstranit\n                            </button>\n                        </div>\n                    </div>\n                ));\n            } else {\n                return null;\n            }\n        } else {\n            if (this.props.itemsSubset) {\n                return this.props.itemsSubset.map(item => (\n                    <div key={item.id} className=\"product-box__row\">\n                        <div className=\"product-box__col\">{item.code}</div>\n                        <div className=\"product-box__col\">{item.name}</div>\n                        <div className=\"product-box__col\">{item.available}</div>\n                    </div>\n                ));\n            } else {\n                return null;\n            }\n        }\n    }\n\n    renderHeader() {\n        if (this.props.currentDate) {\n            return (\n                <div className=\"product-box\">\n                    <div className=\"product-box__row product-box__row--header\">\n                        <div className=\"product-box__col product-box__col--header\">\n                            kod\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\">\n                            nazov\n                        </div>\n\n                        <div className=\"product-box__col product-box__col--header\">\n                            predajna cena\n                        </div>\n\n                        <div className=\"product-box__col product-box__col--header\">\n                            kusov na sklade\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\" />\n                    </div>\n                    {this.renderItems()}\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"product-box\">\n                    <div className=\"product-box__row product-box__row--header\">\n                        <div className=\"product-box__col product-box__col--header\">\n                            kod\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\">\n                            nazov\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\">\n                            kusov na sklade\n                        </div>\n                    </div>\n                    {this.renderItems()}\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper u-margin-top-lg\">\n                <DateSeatchBox />\n                {this.renderHeader()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.app.loading,\n        items: state.store.items,\n        currentDate: state.store.currentDate,\n        itemsSubset: state.store.itemsSubset\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchStoreData: () => dispatch(actions.fetchStoreData()),\n        onDeleteStoreItem: id => dispatch(actions.deleteStoreItem(id)),\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Store);\n","export const parseQueryString = url => {\n    const query = url.split('?')[1];\n    if (query) {\n        const attr = query.split('&');\n        return attr.reduce((acc, v) => {\n            const parts = v.split('=');\n            acc[parts[0]] = parts[1];\n            return acc;\n        }, {});\n    } else {\n        return null;\n    }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { parseQueryString } from '../../utilities/utils';\nimport * as actions from '../../actions';\nimport { link } from 'fs';\n\nclass AddStoreItem extends Component {\n    state = {\n        fields: {\n            id: null,\n            code: '',\n            name: '',\n            sellingPrice: 0\n        },\n        update: false // if true, perform UPDATE operation, if false, perform INSERT operation\n    };\n\n    componentDidMount() {\n        if (this.props.history) {\n            const prefillData = parseQueryString(\n                this.props.history.location.search\n            );\n            if (prefillData) {\n                const updatedFields = { ...this.state.fields };\n                updatedFields.id = prefillData.id;\n                updatedFields.name = prefillData.name;\n                updatedFields.code = prefillData.code;\n                updatedFields.sellingPrice = prefillData['selling-price'];\n\n                this.setState({\n                    update: true,\n                    fields: updatedFields\n                });\n            }\n        }\n\n        // component was opened on modal window\n        if (this.props.openedInModal) {\n            const updatedFields = { ...this.state.fields };\n            updatedFields.code = this.props.code;\n            this.setState({\n                fields: updatedFields\n            });\n        }\n        this.props.onSetActiveLink('store_add');\n    }\n\n    inputChangeHandler = event => {\n        const fieldName = event.target.name;\n        const updatedFields = { ...this.state.fields };\n        updatedFields[fieldName] = event.target.value;\n\n        this.setState({ fields: updatedFields });\n    };\n\n    formSubmitHandler = event => {\n        event.preventDefault();\n\n        if (this.props.openedInModal) {\n            this.props.onAddStoreItem(\n                this.state.fields.code,\n                this.state.fields.name,\n                this.state.fields.sellingPrice,\n                () => {\n                    this.props.onToggleModal(false);\n                }\n            );\n        } else if (!this.state.update) {\n            this.props.onAddStoreItem(\n                this.state.fields.code,\n                this.state.fields.name,\n                this.state.fields.sellingPrice,\n                () => {\n                    this.props.history.replace('/store');\n                }\n            );\n        } else {\n            this.props.onUpdateStoreItem(\n                this.state.fields.id,\n                this.state.fields.code,\n                this.state.fields.name,\n                this.state.fields.sellingPrice,\n                () => {\n                    this.props.history.replace('/store');\n                }\n            );\n        }\n    };\n\n    render() {\n        const attachedWrapperClasses = ['u-margin-top-lg'];\n        if (!this.props.openedInModal) {\n            attachedWrapperClasses.push('wrapper--md');\n            attachedWrapperClasses.push('wrapper');\n        }\n\n        return (\n            <div className={attachedWrapperClasses.join(' ')}>\n                <form className=\"col-form\" onSubmit={this.formSubmitHandler}>\n                    <div className=\"col-form__header\">Pridat polozku</div>\n                    <div className=\"col-form__group\">\n                        <label\n                            className=\"col-form__label\"\n                            htmlFor=\"add-item-code\"\n                        >\n                            kod\n                        </label>\n                        <input\n                            className=\"col-form__input\"\n                            name=\"code\"\n                            id=\"add-item-code\"\n                            type=\"text\"\n                            required\n                            autoFocus\n                            value={this.state.fields.code}\n                            onChange={this.inputChangeHandler}\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        <label\n                            className=\"col-form__label\"\n                            htmlFor=\"add-item-name\"\n                        >\n                            nazov\n                        </label>\n                        <input\n                            className=\"col-form__input\"\n                            name=\"name\"\n                            id=\"add-item-name\"\n                            type=\"text\"\n                            required\n                            autoFocus\n                            value={this.state.fields.name}\n                            onChange={this.inputChangeHandler}\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        <label\n                            className=\"col-form__label\"\n                            htmlFor=\"add-item-sellingPrice\"\n                        >\n                            predajna cena\n                        </label>\n                        <input\n                            className=\"col-form__input\"\n                            name=\"sellingPrice\"\n                            id=\"add-item-sellingPrice\"\n                            type=\"number\"\n                            step={0.01}\n                            required\n                            autoFocus\n                            value={this.state.fields.sellingPrice}\n                            onChange={this.inputChangeHandler}\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        <button className=\"col-form__btn--submit\" type=\"submit\">\n                            {this.state.update ? 'upravit' : 'pridat'}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.store.loading,\n        error: state.store.error\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddStoreItem: (code, name, sellingPrice, cb) =>\n            dispatch(actions.addStoreItem(code, name, sellingPrice, cb)),\n        onUpdateStoreItem: (id, code, name, sellingPrice, cb) =>\n            dispatch(actions.updateStoreItem(id, code, name, sellingPrice, cb)),\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname)),\n        onToggleModal: showModal => dispatch(actions.toggleModal(showModal))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddStoreItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass Receipt extends Component {\n    componentDidMount() {\n        if (!this.props.receipts || !this.props.receipts.length) {\n            this.props.onFetchReceipt();\n        }\n        this.props.onSetActiveLink('receipts');\n    }\n\n    renderReceipt() {\n        if (this.props.receipts) {\n            return this.props.receipts.map(card => (\n                <div key={card.id} className=\"product-box__row\">\n                    <div className=\"product-box__col\">{card.identifier}</div>\n                    <div className=\"product-box__col\">{card.company}</div>\n                    <div className=\"product-box__col\">\n                        {card.date.split('T')[0]}\n                    </div>\n                    <div className=\"product-box__col\">{card.price}</div>\n                    <div className=\"product-box__col\">\n                        <Link\n                            className=\"btn btn--small\"\n                            to={`/receipts/detail/${card.id}`}\n                        >\n                            detail\n                        </Link>\n                    </div>\n                </div>\n            ));\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper u-margin-top-lg\">\n                <div className=\"product-box product-box--rounded-top\">\n                    <div className=\"product-box__row product-box__row--header\">\n                        <div className=\"product-box__col product-box__col--header\">\n                            id\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\">\n                            dodavatel\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\">\n                            datum\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\">\n                            cena\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\" />\n                    </div>\n                    {this.renderReceipt()}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.app.loading,\n        receipts: state.receipts.items\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchReceipt: () => dispatch(actions.fetchReceipts()),\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Receipt);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\n\nconst Modal = props => {\n    const clickHandler = event => {\n        // props.onToggleModal(false);\n    };\n\n    return (\n        <div onClick={clickHandler} className=\"backdrop\">\n            {props.children}\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onToggleModal: showModal => dispatch(actions.toggleModal(showModal))\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Modal);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\n\nconst Modal = props => {\n    return (\n        <div className=\"modal\">\n            <div>{props.children}</div>\n            <button\n                onClick={props.onToggleModal.bind(null, false)}\n                className=\"modal__close-btn\"\n            >\n                X\n            </button>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onToggleModal: showModal => dispatch(actions.toggleModal(showModal))\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Modal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\nimport Backdrop from '../UI/Backdrop';\nimport Modal from '../UI/Modal';\nimport AddStoreItem from '../Store/AddStoreItem';\n\nclass ReceiptItemForm extends Component {\n    state = {\n        receiptId: this.props.receiptId,\n        storeItemId: '',\n        code: '',\n        amount: 0,\n        inp_price: 0,\n        error: '',\n        message: ''\n    };\n\n    // revalidate code when modal with form is closed, it might have been created\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.showModal && !nextProps.showModal) {\n            const { error, message } = this.validateCode(this.state.code);\n            this.setState({ error, message });\n        }\n\n        return true;\n    }\n\n    inputChangeHandler = event => {\n        const { error, message } = this.validateForm(event);\n        this.setState({\n            [event.target.name]: event.target.value,\n            error,\n            message\n        });\n    };\n\n    validateCode(value) {\n        let error = this.state.error;\n        let message = this.state.message;\n\n        const storeItemCodes = this.props.storeItems.map(item => item.code);\n        if (!storeItemCodes.includes(value) && value.length > 0) {\n            error = ` ${value} => neexistujuci kod`;\n            message = '';\n        } else if (value.length > 0) {\n            error = '';\n            const storeItem = this.props.storeItems.find(\n                item => item.code === value\n            );\n            message = ` ${storeItem.code} => ${storeItem.name}`;\n        } else {\n            error = '';\n            message = '';\n        }\n        return { error, message };\n    }\n\n    validateForm(event) {\n        let error = this.state.error;\n        let message = this.state.message;\n\n        if (event.target.name === 'code') {\n            return this.validateCode(event.target.value);\n        }\n        return { error, message };\n    }\n\n    formSubmitHandler = event => {\n        event.preventDefault();\n\n        if (!this.state.error) {\n            const storeItem = this.props.storeItems.find(\n                item => item.code === this.state.code\n            );\n\n            this.props.onAddReceiptItem(\n                this.state.receiptId,\n                storeItem.id,\n                this.state.amount,\n                storeItem.name,\n                this.state.code,\n                this.state.inp_price\n            );\n            this.props.hideFormHandler();\n        }\n    };\n\n    createStoreItemHandler = event => {\n        this.props.onToggleModal(true);\n    };\n\n    renderModal() {\n        if (this.props.showModal) {\n            return (\n                <Backdrop>\n                    <Modal>\n                        <AddStoreItem openedInModal code={this.state.code} />\n                    </Modal>\n                </Backdrop>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderModal()}\n                <div className=\"row-form__wrapper\">\n                    <form\n                        className=\"row-form\"\n                        onSubmit={this.formSubmitHandler}\n                    >\n                        <div className=\"row-form__row row-form__row--header\">\n                            <label className=\"row-form__col row-form__col--header\">\n                                kod\n                            </label>\n                            <label className=\"row-form__col row-form__col--header\">\n                                mnozstvo\n                            </label>\n                            <label className=\"row-form__col row-form__col--header\">\n                                nakupna cena\n                            </label>\n                        </div>\n                        <div className=\"row-form__row\">\n                            <input\n                                className=\"row-form__col row-form__input\"\n                                type=\"text\"\n                                name=\"code\"\n                                required\n                                value={this.state.code}\n                                onChange={this.inputChangeHandler}\n                            />\n                            <input\n                                className=\"row-form__col row-form__input\"\n                                type=\"number\"\n                                step={1}\n                                name=\"amount\"\n                                required\n                                value={this.state.amount}\n                                onChange={this.inputChangeHandler}\n                            />\n                            <input\n                                className=\"row-form__col row-form__input\"\n                                type=\"number\"\n                                step={0.01}\n                                name=\"inp_price\"\n                                required\n                                value={this.state.inp_price}\n                                onChange={this.inputChangeHandler}\n                            />\n                        </div>\n                        <div className=\"row-form__row\">\n                            <button\n                                className=\"row-form__col row-form__btn--submit\"\n                                type=\"submit\"\n                            >\n                                potvrdit\n                            </button>\n                        </div>\n                    </form>\n                    <div className=\"row-form__message\">\n                        {this.state.error ? (\n                            <div className=\"row-form__col row-form__col--error\">\n                                <p>{this.state.error}</p>\n                                <button\n                                    onClick={this.createStoreItemHandler}\n                                    className=\"row-form__message-btn row-form__message-btn--error\"\n                                >\n                                    vytvorit polozku\n                                </button>\n                            </div>\n                        ) : null}\n                        {this.state.message ? (\n                            <div className=\"row-form__col row-form__col--success\">\n                                <p>{this.state.message}</p>\n                            </div>\n                        ) : null}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        storeItems: state.store.items,\n        showModal: state.app.showModal\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddReceiptItem: (\n            receiptId,\n            storeItemId,\n            amount,\n            name,\n            code,\n            inp_price,\n            cb\n        ) =>\n            dispatch(\n                actions.addReceiptItem(\n                    receiptId,\n                    storeItemId,\n                    amount,\n                    name,\n                    code,\n                    inp_price,\n                    cb\n                )\n            ),\n        onToggleModal: showModal => dispatch(actions.toggleModal(showModal))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ReceiptItemForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport ReceiptItemForm from './ReceiptItemForm';\nimport * as actions from '../../actions';\n\nclass IssueCards extends Component {\n    state = {\n        id: +this.props.history.location.pathname.split('/')[3],\n        showForm: false\n    };\n\n    componentDidMount() {\n        const selectedReceipt = this.props.receipts.find(\n            item => item.id === this.state.id\n        );\n        if (selectedReceipt && 'storeItems' in selectedReceipt) {\n            this.props.onChangeSelectedReceipt(this.state.id);\n        } else {\n            this.props.onFetchReceipt(this.state.id);\n        }\n        this.props.onSetActiveLink('receipts');\n    }\n\n    hideFormHandler = () => {\n        this.setState({\n            showForm: false\n        });\n    };\n\n    deleteReceiptHandler = () => {\n        if (\n            this.props.selectedReceipt.storeItems &&\n            this.props.selectedReceipt.storeItems.length\n        ) {\n            alert(\n                'vymazat je mozne iba prijemku ktora neobsahuje ziadne polozky'\n            );\n        } else {\n            this.props.onDeleteReceipt(this.state.id, () => {\n                this.props.history.replace('/receipts');\n            });\n        }\n    };\n\n    renderReceiptStoreItems(storeItems) {\n        if (storeItems) {\n            return storeItems.map(item => (\n                <div key={item.id} className=\"product-box__row\">\n                    <div className=\"product-box__col\">{item.code}</div>\n                    <div className=\"product-box__col\">{item.name}</div>\n                    <div className=\"product-box__col\">{item.amount}</div>\n                    <div className=\"product-box__col\">{item.inp_price}</div>\n                    <div className=\"product-box__col\">\n                        <button\n                            className=\"btn btn--danger btn--small\"\n                            onClick={() =>\n                                this.props.onDeleteReceiptItem(\n                                    this.props.selectedReceipt.id,\n                                    item.id,\n                                    item.amount\n                                )\n                            }\n                        >\n                            odstanit\n                        </button>\n                    </div>\n                </div>\n            ));\n        }\n    }\n\n    renderReceipt() {\n        if (this.props.selectedReceipt) {\n            return (\n                <div className=\"card u-margin-top-lg\">\n                    <div className=\"card__header\">\n                        <div className=\"card__group u-margin-top-xsm\">\n                            <p className=\"card__text card__group--left\">id: </p>\n                            <p className=\"card__text card__group--right\">\n                                {this.props.selectedReceipt.identifier}\n                            </p>\n                        </div>\n                        <div className=\"card__group\">\n                            <p className=\"card__text card__group--left\">\n                                dodavatel:\n                            </p>\n                            <p className=\"card__text card__group--right\">\n                                {this.props.selectedReceipt.company}\n                            </p>\n                        </div>\n                        <div className=\"card__group\">\n                            <p className=\"card__text card__group--left\">\n                                datum:\n                            </p>\n                            <p className=\"card__text card__group--right\">\n                                {this.props.selectedReceipt.date\n                                    ? this.props.selectedReceipt.date.split(\n                                          'T'\n                                      )[0]\n                                    : null}\n                            </p>\n                        </div>\n                        <div className=\"card__group\">\n                            <p className=\"card__text card__group--left\">\n                                cena:\n                            </p>\n                            <p className=\"card__text card__group--right\">\n                                {this.props.selectedReceipt.price}\n                            </p>\n                        </div>\n                        <Link\n                            className=\"btn u-margin-left-sm u-margin-top-sm\"\n                            to={`/issue-cards/add?id=${\n                                this.props.selectedReceipt.id\n                            }&identifier=${\n                                this.props.selectedReceipt.identifier\n                            }&date=${this.props.selectedReceipt.date}&company=${\n                                this.props.selectedReceipt.company\n                            }&price=${this.props.selectedReceipt.price}`}\n                        >\n                            upravit hlavicku\n                        </Link>\n\n                        <button\n                            className=\"btn btn--danger u-margin-left-xsm u-margin-top-sm\"\n                            onClick={this.deleteReceiptHandler}\n                        >\n                            odstanit prijemku\n                        </button>\n                    </div>\n\n                    <div className=\"product-box\">\n                        <div className=\"product-box__row product-box__row--header\">\n                            <div className=\"product-box__col product-box__col--header\">\n                                kod\n                            </div>\n                            <div className=\"product-box__col product-box__col--header\">\n                                nazov\n                            </div>\n                            <div className=\"product-box__col product-box__col--header\">\n                                mnozstvo\n                            </div>\n                            <div className=\"product-box__col product-box__col--header\">\n                                nakupna cena\n                            </div>\n                            <div className=\"product-box__col product-box__col--header\" />\n                        </div>\n                        {this.renderReceiptStoreItems(\n                            this.props.selectedReceipt.storeItems\n                        )}\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderReceipt()}\n                <div className=\"wrapper u-margin-top-md\">\n                    {this.state.showForm ? (\n                        <ReceiptItemForm\n                            receiptId={this.props.selectedReceipt.id}\n                            hideFormHandler={this.hideFormHandler}\n                        />\n                    ) : null}\n                    <button\n                        className=\"btn btn--outline-blue u-margin-top-xsm\"\n                        onClick={() =>\n                            this.setState(prevState => ({\n                                showForm: !prevState.showForm\n                            }))\n                        }\n                    >\n                        {this.state.showForm\n                            ? 'skryt formular'\n                            : 'pridat polozku'}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst masStateToProps = state => {\n    return {\n        loading: state.app.loading,\n        receipts: state.receipts.items,\n        selectedReceipt: state.receipts.selectedItem\n    };\n};\n\nconst masDispatchToProps = dispatch => {\n    return {\n        onFetchReceipt: id => dispatch(actions.fetchReceipt(id)),\n        onFetchReceipts: () => dispatch(actions.fetchReceipts()),\n        onChangeSelectedReceipt: id =>\n            dispatch(actions.changeSelectedReceipt(id)),\n        onDeleteReceiptItem: (receiptId, storeItemId, amount) =>\n            dispatch(actions.deleteReceiptItem(receiptId, storeItemId, amount)),\n        onDeleteReceipt: (id, cb) => dispatch(actions.deleteReceipt(id, cb)),\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname))\n    };\n};\n\nexport default connect(\n    masStateToProps,\n    masDispatchToProps\n)(IssueCards);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { parseQueryString } from '../../utilities/utils';\nimport * as actions from '../../actions';\n\nclass ReceiptHeaderForm extends Component {\n    state = {\n        id: '',\n        identifier: '',\n        company: '',\n        date: '',\n        price: 0,\n        error: ''\n    };\n\n    componentDidMount() {\n        if (this.props.history.location.search) {\n            const { id, identifier, company, date, price } = parseQueryString(\n                this.props.history.location.search\n            );\n            if (id) {\n                this.setState({\n                    id: +id,\n                    identifier,\n                    company,\n                    price,\n                    date: date.split('T')[0]\n                });\n            }\n        }\n        this.props.onSetActiveLink('receipts_add');\n    }\n\n    inputChangeHandler = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    validateForm() {\n        let receiptIdentifiers;\n        if (this.state.id) {\n            const otherReceipts = this.props.receipts.filter(\n                item => item.id !== this.state.id\n            );\n            receiptIdentifiers = otherReceipts.map(item => item.identifier);\n        } else {\n            receiptIdentifiers = this.props.receipts.map(\n                item => item.identifier\n            );\n        }\n\n        if (receiptIdentifiers.includes(this.state.identifier)) {\n            this.setState({ error: 'duplicitne ID' });\n        } else {\n            this.setState({ error: '' });\n        }\n    }\n\n    formSubmitHandler = event => {\n        event.preventDefault();\n\n        this.validateForm();\n\n        if (!this.state.error) {\n            if (!this.state.id) {\n                this.props.onAddReceipts(\n                    this.state.identifier,\n                    this.state.company,\n                    this.state.date,\n                    this.state.price,\n                    id => {\n                        this.props.history.replace(`/receipts/detail/${id}`);\n                    }\n                );\n            } else {\n                this.props.onUpdateReceipt(\n                    this.state.id,\n                    this.state.identifier,\n                    this.state.company,\n                    this.state.date,\n                    this.state.price,\n                    id => {\n                        this.props.history.replace(`/receipts/detail/${id}`);\n                    }\n                );\n            }\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"wrapper wrapper--md u-margin-top-lg\">\n                <form className=\"col-form\" onSubmit={this.formSubmitHandler}>\n                    <div className=\"col-form__header\">Vytvorit prijemku</div>\n                    <div className=\"col-form__group\">\n                        <label className=\"col-form__label\">id</label>\n                        <input\n                            className=\"col-form__input\"\n                            type=\"text\"\n                            value={this.state.identifier}\n                            name=\"identifier\"\n                            required\n                            onChange={this.inputChangeHandler}\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        <label className=\"col-form__label\">dodavatel</label>\n                        <input\n                            className=\"col-form__input\"\n                            type=\"text\"\n                            value={this.state.company}\n                            name=\"company\"\n                            onChange={this.inputChangeHandler}\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        <label className=\"col-form__label\">datum</label>\n                        <input\n                            className=\"col-form__input\"\n                            type=\"date\"\n                            value={this.state.date}\n                            name=\"date\"\n                            onChange={this.inputChangeHandler}\n                            required\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        <label className=\"col-form__label\">cena</label>\n                        <input\n                            className=\"col-form__input\"\n                            type=\"number\"\n                            step={0.01}\n                            value={this.state.price}\n                            name=\"price\"\n                            onChange={this.inputChangeHandler}\n                            required\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        {this.state.error ? (\n                            <p className=\"col-form__group--error\">\n                                {this.state.error}\n                            </p>\n                        ) : null}\n                    </div>\n                    <div className=\"col-form__group\">\n                        <button className=\"col-form__btn--submit\">\n                            pokracovat\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        receipts: state.receipts.items\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddReceipts: (identifier, receiver, date, price, cb) =>\n            dispatch(\n                actions.addReceiptHeader(identifier, receiver, date, price, cb)\n            ),\n        onUpdateReceipt: (id, identifier, receiver, date, price, cb) =>\n            dispatch(\n                actions.updateReceiptHeader(\n                    id,\n                    identifier,\n                    receiver,\n                    date,\n                    price,\n                    cb\n                )\n            ),\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ReceiptHeaderForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass IssueCards extends Component {\n    componentDidMount() {\n        if (!this.props.issueCards || !this.props.issueCards.length) {\n            this.props.onFetchIssueCards();\n        }\n        this.props.onSetActiveLink('issueCards');\n    }\n\n    renderIssueCards() {\n        if (this.props.issueCards) {\n            return this.props.issueCards.map(card => (\n                <div key={card.id} className=\"product-box__row\">\n                    <div className=\"product-box__col\">{card.identifier}</div>\n                    <div className=\"product-box__col\">{card.receiver}</div>\n                    <div className=\"product-box__col\">\n                        {card.date.split('T')[0]}\n                    </div>\n                    <div className=\"product-box__col\">\n                        <Link\n                            className=\"btn btn--small\"\n                            to={`/issue-cards/detail/${card.id}`}\n                        >\n                            detail\n                        </Link>\n                    </div>\n                </div>\n            ));\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper u-margin-top-lg\">\n                <div className=\"product-box product-box--rounded-top\">\n                    <div className=\"product-box__row product-box__row--header\">\n                        <div className=\"product-box__col product-box__col--header\">\n                            id\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\">\n                            dodavatel\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\">\n                            datum\n                        </div>\n                        <div className=\"product-box__col product-box__col--header\" />\n                    </div>\n                    {this.renderIssueCards()}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.app.loading,\n        issueCards: state.issueCards.items\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchIssueCards: () => dispatch(actions.fetchIssueCards()),\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(IssueCards);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../actions';\nimport Backdrop from '../UI/Backdrop';\nimport Modal from '../UI/Modal';\nimport AddStoreItem from '../Store/AddStoreItem';\n\nclass IssueCardItemForm extends Component {\n    state = {\n        issueCardId: this.props.issueCardId,\n        storeItemId: '',\n        code: '',\n        amount: 0,\n        error: '',\n        message: ''\n    };\n\n    // revalidate code when modal with form is closed, it might have been created\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.showModal && !nextProps.showModal) {\n            const { error, message } = this.validateCode(this.state.code);\n            this.setState({ error, message });\n        }\n\n        return true;\n    }\n\n    inputChangeHandler = event => {\n        const { error, message } = this.validateForm(event);\n        this.setState({\n            [event.target.name]: event.target.value,\n            error,\n            message\n        });\n    };\n\n    validateCode(value) {\n        let error = this.state.error;\n        let message = this.state.message;\n\n        const storeItemCodes = this.props.storeItems.map(item => item.code);\n        if (!storeItemCodes.includes(value) && value.length > 0) {\n            error = ` ${value} => neexistujuci kod`;\n            message = '';\n        } else if (value.length > 0) {\n            error = '';\n            const storeItem = this.props.storeItems.find(\n                item => item.code === value\n            );\n            message = ` ${storeItem.code} => ${storeItem.name}`;\n        } else {\n            error = '';\n            message = '';\n        }\n        return { error, message };\n    }\n\n    validateForm(event) {\n        let error = this.state.error;\n        let message = this.state.message;\n\n        if (event.target.name === 'code') {\n            return this.validateCode(event.target.value);\n        }\n        return { error, message };\n    }\n\n    formSubmitHandler = event => {\n        event.preventDefault();\n\n        if (!this.state.error) {\n            const storeItem = this.props.storeItems.find(\n                item => item.code === this.state.code\n            );\n            this.props.onAddIssueCardItem(\n                this.state.issueCardId,\n                storeItem.id,\n                this.state.amount,\n                storeItem.name,\n                this.state.code\n            );\n            this.props.hideFormHandler();\n        }\n    };\n\n    createStoreItemHandler = event => {\n        this.props.onToggleModal(true);\n    };\n\n    renderModal() {\n        if (this.props.showModal) {\n            return (\n                <Backdrop>\n                    <Modal>\n                        <div className=\"wrapper wrapper--md\">\n                            <AddStoreItem\n                                openedInModal\n                                code={this.state.code}\n                            />\n                        </div>\n                    </Modal>\n                </Backdrop>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderModal()}\n                <div className=\"row-form__wrapper\">\n                    <form\n                        className=\"row-form\"\n                        onSubmit={this.formSubmitHandler}\n                    >\n                        <div className=\"row-form__row row-form__row--header\">\n                            <label className=\"row-form__col row-form__col--header\">\n                                kod\n                            </label>\n                            <label className=\"row-form__col row-form__col--header\">\n                                mnozstvo\n                            </label>\n                        </div>\n                        <div className=\"row-form__row\">\n                            <input\n                                className=\"row-form__col row-form__input\"\n                                type=\"text\"\n                                name=\"code\"\n                                required\n                                value={this.state.code}\n                                onChange={this.inputChangeHandler}\n                            />\n                            <input\n                                className=\"row-form__col row-form__input\"\n                                type=\"number\"\n                                step={1}\n                                name=\"amount\"\n                                required\n                                value={this.state.amount}\n                                onChange={this.inputChangeHandler}\n                            />\n                        </div>\n                        <div className=\"row-form__row\">\n                            <button\n                                className=\"row-form__col row-form__btn--submit\"\n                                type=\"submit\"\n                            >\n                                potvrdit\n                            </button>\n                        </div>\n                    </form>\n                    <div className=\"row-form__message\">\n                        {this.state.error ? (\n                            <div className=\"row-form__col row-form__col--error\">\n                                <p>{this.state.error}</p>\n                                <button\n                                    onClick={this.createStoreItemHandler}\n                                    className=\"row-form__message-btn row-form__message-btn--error\"\n                                >\n                                    vytvorit polozku\n                                </button>\n                            </div>\n                        ) : null}\n                        {this.state.message ? (\n                            <div className=\"row-form__col row-form__col--success\">\n                                <p>{this.state.message}</p>\n                            </div>\n                        ) : null}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        storeItems: state.store.items,\n        showModal: state.app.showModal\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddIssueCardItem: (\n            issueCardId,\n            storeItemId,\n            amount,\n            name,\n            code,\n            cb\n        ) =>\n            dispatch(\n                actions.addIssueCardItem(\n                    issueCardId,\n                    storeItemId,\n                    amount,\n                    name,\n                    code,\n                    cb\n                )\n            ),\n        onToggleModal: showModal => dispatch(actions.toggleModal(showModal))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(IssueCardItemForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport IssueCardItemForm from './IssueCardItemForm';\nimport * as actions from '../../actions';\n\nclass IssueCards extends Component {\n    state = {\n        id: +this.props.history.location.pathname.split('/')[3],\n        showForm: false\n    };\n\n    componentDidMount() {\n        const selectedIssueCard = this.props.issueCards.find(\n            item => item.id === this.state.id\n        );\n        console.log(selectedIssueCard);\n        if (selectedIssueCard && 'storeItems' in selectedIssueCard) {\n            this.props.onChangeSelectedIssueCard(this.state.id);\n        } else {\n            this.props.onFetchIssueCard(this.state.id);\n        }\n        this.props.onSetActiveLink('issueCards');\n    }\n\n    hideFormHandler = () => {\n        this.setState({\n            showForm: false\n        });\n    };\n\n    deleteIssueCardHandler = () => {\n        if (\n            this.props.selectedIssueCard.storeItems &&\n            this.props.selectedIssueCard.storeItems.length\n        ) {\n            alert(\n                'vymazat je mozne iba vydjaku ktora neobsahuje ziadne polozky'\n            );\n        } else {\n            this.props.onDeleteIssueCard(this.state.id, () => {\n                this.props.history.replace('/issue-cards');\n            });\n        }\n    };\n\n    renderIssueCardStoreItems(storeItems) {\n        if (storeItems) {\n            return storeItems.map(item => (\n                <div key={item.id} className=\"product-box__row\">\n                    <div className=\"product-box__col\">{item.code}</div>\n                    <div className=\"product-box__col\">{item.name}</div>\n                    <div className=\"product-box__col\">{item.amount}</div>\n                    <div className=\"product-box__col\">\n                        <button\n                            className=\"btn btn--danger btn--small\"\n                            onClick={() =>\n                                this.props.onDeleteIssueCardItem(\n                                    this.props.selectedIssueCard.id,\n                                    item.id,\n                                    item.amount\n                                )\n                            }\n                        >\n                            odstanit\n                        </button>\n                    </div>\n                </div>\n            ));\n        }\n    }\n\n    renderIssueCard() {\n        if (this.props.selectedIssueCard) {\n            return (\n                <div className=\"card u-margin-top-lg\">\n                    <div className=\"card__header\">\n                        <div className=\"card__group u-margin-top-xsm\">\n                            <p className=\"card__text card__group--left\">id: </p>\n                            <p className=\"card__text card__group--right\">\n                                {this.props.selectedIssueCard.identifier}\n                            </p>\n                        </div>\n                        <div className=\"card__group\">\n                            <p className=\"card__text card__group--left\">\n                                odoberatel:\n                            </p>\n                            <p className=\"card__text card__group--right\">\n                                {this.props.selectedIssueCard.receiver}\n                            </p>\n                        </div>\n                        <div className=\"card__group\">\n                            <p className=\"card__text card__group--left\">\n                                datum:\n                            </p>\n                            <p className=\"card__text card__group--right\">\n                                {this.props.selectedIssueCard.date\n                                    ? this.props.selectedIssueCard.date.split(\n                                          'T'\n                                      )[0]\n                                    : null}\n                            </p>\n                        </div>\n                        <Link\n                            className=\"btn u-margin-left-sm u-margin-top-sm\"\n                            to={`/issue-cards/add?id=${\n                                this.props.selectedIssueCard.id\n                            }&identifier=${\n                                this.props.selectedIssueCard.identifier\n                            }&date=${\n                                this.props.selectedIssueCard.date\n                            }&receiver=${\n                                this.props.selectedIssueCard.receiver\n                            }`}\n                        >\n                            upravit hlavicku\n                        </Link>\n\n                        <button\n                            className=\"btn btn--danger u-margin-left-xsm u-margin-top-sm\"\n                            onClick={this.deleteIssueCardHandler}\n                        >\n                            odstanit vydajku\n                        </button>\n                    </div>\n\n                    <div className=\"product-box\">\n                        <div className=\"product-box__row product-box__row--header\">\n                            <div className=\"product-box__col product-box__col--header\">\n                                kod\n                            </div>\n                            <div className=\"product-box__col product-box__col--header\">\n                                nazov\n                            </div>\n                            <div className=\"product-box__col product-box__col--header\">\n                                mnozstvo\n                            </div>\n                            <div className=\"product-box__col product-box__col--header\" />\n                        </div>\n                        {this.renderIssueCardStoreItems(\n                            this.props.selectedIssueCard.storeItems\n                        )}\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderIssueCard()}\n                <div className=\"wrapper u-margin-top-md\">\n                    {this.state.showForm ? (\n                        <IssueCardItemForm\n                            issueCardId={this.props.selectedIssueCard.id}\n                            hideFormHandler={this.hideFormHandler}\n                        />\n                    ) : null}\n                    <button\n                        className=\"btn btn--outline-blue u-margin-top-xsm\"\n                        onClick={() =>\n                            this.setState(prevState => ({\n                                showForm: !prevState.showForm\n                            }))\n                        }\n                    >\n                        {this.state.showForm\n                            ? 'skryt formular'\n                            : 'pridat polozku'}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst masStateToProps = state => {\n    return {\n        loading: state.app.loading,\n        issueCards: state.issueCards.items,\n        selectedIssueCard: state.issueCards.selectedItem\n    };\n};\n\nconst masDispatchToProps = dispatch => {\n    return {\n        onFetchIssueCard: id => dispatch(actions.fetchIssueCard(id)),\n        onFetchIssueCards: () => dispatch(actions.fetchIssueCards()),\n        onChangeSelectedIssueCard: id =>\n            dispatch(actions.changeSelectedIssueCard(id)),\n        onDeleteIssueCardItem: (issueCardId, storeItemId, amount) =>\n            dispatch(\n                actions.deleteIssueCardItem(issueCardId, storeItemId, amount)\n            ),\n        onDeleteIssueCard: (id, cb) =>\n            dispatch(actions.deleteIssueCard(id, cb)),\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname))\n    };\n};\n\nexport default connect(\n    masStateToProps,\n    masDispatchToProps\n)(IssueCards);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { parseQueryString } from '../../utilities/utils';\nimport * as actions from '../../actions';\n\nclass IssueCardHeaderForm extends Component {\n    state = {\n        id: '',\n        identifier: '',\n        receiver: '',\n        date: '',\n        error: ''\n    };\n\n    componentDidMount() {\n        if (this.props.history.location.search) {\n            const { id, identifier, receiver, date } = parseQueryString(\n                this.props.history.location.search\n            );\n            if (id) {\n                this.setState({\n                    id: +id,\n                    identifier,\n                    receiver,\n                    date: date.split('T')[0]\n                });\n            }\n        }\n        this.props.onSetActiveLink('issueCards_add');\n    }\n\n    inputChangeHandler = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    validateForm() {\n        let issueCardIdentifiers;\n        if (this.state.id) {\n            const otherIssueCards = this.props.issueCards.filter(\n                item => item.id !== this.state.id\n            );\n            issueCardIdentifiers = otherIssueCards.map(item => item.identifier);\n        } else {\n            issueCardIdentifiers = this.props.issueCards.map(\n                item => item.identifier\n            );\n        }\n\n        if (issueCardIdentifiers.includes(this.state.identifier)) {\n            this.setState({ error: 'duplicitne ID' });\n        } else {\n            this.setState({ error: '' });\n        }\n    }\n\n    formSubmitHandler = event => {\n        event.preventDefault();\n\n        this.validateForm();\n\n        if (!this.state.error) {\n            if (!this.state.id) {\n                this.props.onAddIssueCard(\n                    this.state.identifier,\n                    this.state.receiver,\n                    this.state.date,\n                    id => {\n                        this.props.history.replace(`/issue-cards/detail/${id}`);\n                    }\n                );\n            } else {\n                this.props.onUpdateIssueCard(\n                    this.state.id,\n                    this.state.identifier,\n                    this.state.receiver,\n                    this.state.date,\n                    id => {\n                        this.props.history.replace(`/issue-cards/detail/${id}`);\n                    }\n                );\n            }\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"wrapper wrapper--md u-margin-top-lg\">\n                <form className=\"col-form\" onSubmit={this.formSubmitHandler}>\n                    <div className=\"col-form__header\">Vytvorit vydajku</div>\n                    <div className=\"col-form__group\">\n                        <label className=\"col-form__label\">id</label>\n                        <input\n                            className=\"col-form__input\"\n                            type=\"text\"\n                            value={this.state.identifier}\n                            name=\"identifier\"\n                            required\n                            onChange={this.inputChangeHandler}\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        <label className=\"col-form__label\">odoberatel</label>\n                        <input\n                            className=\"col-form__input\"\n                            type=\"text\"\n                            value={this.state.receiver}\n                            name=\"receiver\"\n                            onChange={this.inputChangeHandler}\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        <label className=\"col-form__label\">datum</label>\n                        <input\n                            className=\"col-form__input\"\n                            type=\"date\"\n                            value={this.state.date}\n                            name=\"date\"\n                            onChange={this.inputChangeHandler}\n                            required\n                        />\n                    </div>\n                    <div className=\"col-form__group\">\n                        {this.state.error ? (\n                            <p className=\"col-form__group--error\">\n                                {this.state.error}\n                            </p>\n                        ) : null}\n                    </div>\n                    <div className=\"col-form__group\">\n                        <button className=\"col-form__btn--submit\">\n                            pokracovat\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        issueCards: state.issueCards.items\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddIssueCard: (identifier, receiver, date, cb) =>\n            dispatch(\n                actions.addIssueCardHeader(identifier, receiver, date, cb)\n            ),\n        onUpdateIssueCard: (id, identifier, receiver, date, cb) =>\n            dispatch(\n                actions.updateIssueCardHeader(\n                    id,\n                    identifier,\n                    receiver,\n                    date,\n                    cb\n                )\n            ),\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(IssueCardHeaderForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../actions';\n\nclass Landing extends Component {\n    componentDidMount() {\n        this.props.onSetActiveLink('/');\n    }\n\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"landing__item landing__item--1\">\n                    <h1 className=\"landing__header\">SKLAD</h1>\n                    <div className=\"landing__body\">\n                        <div>\n                            <Link className=\"landing__link\" to=\"/store\">\n                                skladove polozky\n                            </Link>\n                        </div>\n                        <div>\n                            <Link\n                                className=\"landing__link\"\n                                to=\"/store/add-item\"\n                            >\n                                pridat polozku\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"landing__item landing__item--2\">\n                    <h1 className=\"landing__header\">PRIJEMKY</h1>\n                    <div className=\"landing__body\">\n                        <div>\n                            <Link className=\"landing__link\" to=\"/receipts\">\n                                zobrazit prijemky\n                            </Link>\n                        </div>\n                        <div>\n                            <Link className=\"landing__link\" to=\"/receipts/add\">\n                                vytvorit prijemku\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"landing__item landing__item--3\">\n                    <h1 className=\"landing__header\">VYDAJKY</h1>\n                    <div className=\"landing__body\">\n                        <div>\n                            <Link className=\"landing__link\" to=\"/issue-cards\">\n                                zobrazit vydajky\n                            </Link>\n                        </div>\n                        <div>\n                            <Link\n                                className=\"landing__link\"\n                                to=\"/issue-cards/add\"\n                            >\n                                vytvorit vydajku\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSetActiveLink: linkname => dispatch(actions.setActiveLink(linkname))\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Landing);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nconst magicStrings = {\n    NAME: 'NAME',\n    CODE: 'CODE'\n};\n\nfunction findItemsByName(name, allItems) {\n    name = name.toLowerCase();\n    const result = [];\n\n    if (name.length >= 3) {\n        allItems\n            .map(item => ({\n                name: item.name.toLowerCase(),\n                code: item.code.toUpperCase(),\n                available: item.available\n            }))\n            .forEach(item => {\n                if (item.name.includes(name)) {\n                    result.push(item);\n                }\n            });\n    }\n\n    return result;\n}\n\nfunction findItemsByCode(code, allItems) {\n    code = code.toUpperCase();\n    const result = [];\n\n    if (code.length >= 3) {\n        allItems\n            .map(item => ({\n                name: item.name.toLowerCase(),\n                code: item.code.toUpperCase(),\n                available: item.available\n            }))\n            .forEach(item => {\n                if (item.code.includes(code)) {\n                    result.push(item);\n                }\n            });\n    }\n\n    return result;\n}\n\nclass SearchBox extends Component {\n    state = {\n        opened: false,\n        searchString: '',\n        found: [],\n        searchBy: magicStrings.NAME\n    };\n\n    findItems(value, searchBy) {\n        let foundItems = [];\n\n        if (searchBy === magicStrings.NAME) {\n            foundItems = findItemsByName(value, this.props.items);\n        } else if (searchBy === magicStrings.CODE) {\n            foundItems = findItemsByCode(value, this.props.items);\n        }\n\n        return foundItems;\n    }\n\n    inputChangeHandler = event => {\n        let foundItems = this.findItems(\n            event.target.value,\n            this.state.searchBy\n        );\n\n        this.setState({\n            searchString: event.target.value,\n            found: foundItems\n        });\n    };\n\n    renderFoundItems() {\n        return this.state.found.map(item => (\n            <div key={item.id} className=\"search-code__row\">\n                <div className=\"search-code__col\">{item.code}</div>\n                <div className=\"search-code__col\">{item.name}</div>\n                <div className=\"search-code__col\">{item.available}</div>\n            </div>\n        ));\n    }\n\n    renderFoundItemsBox() {\n        if (this.state.found.length) {\n            return (\n                <div className=\"search-code__result\">\n                    <div className=\"search-code__row search-code__row--header\">\n                        <div className=\"search-code__col\">kod</div>\n                        <div className=\"search-code__col\">nazov</div>\n                        <div className=\"search-code__col\">mnozstvo</div>\n                    </div>\n                    {this.renderFoundItems()}\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    changeSearchHandler = option => {\n        if (option !== this.state.searchBy) {\n            let newSearchByOption;\n            if (this.state.searchBy === magicStrings.CODE) {\n                newSearchByOption = magicStrings.NAME;\n            } else if (this.state.searchBy === magicStrings.NAME) {\n                newSearchByOption = magicStrings.CODE;\n            }\n\n            let foundItems = this.findItems(\n                this.state.searchString,\n                newSearchByOption\n            );\n\n            this.setState({\n                searchBy: option,\n                found: foundItems\n            });\n        }\n    };\n\n    renderForm() {\n        if (this.state.opened) {\n            return (\n                <div className=\"search-code__wrapper\">\n                    {this.renderFoundItemsBox()}\n                    <div className=\"search-code__header\">\n                        <button\n                            onClick={() => this.setState({ opened: false })}\n                            className=\"search-code__close-btn\"\n                        >\n                            X\n                        </button>\n                        <div className=\"search-code__buttons\">\n                            <button\n                                onClick={this.changeSearchHandler.bind(\n                                    null,\n                                    magicStrings.NAME\n                                )}\n                                className={\n                                    this.state.searchBy === magicStrings.NAME\n                                        ? 'btn btn--small '\n                                        : 'btn btn--small btn--outline-violet'\n                                }\n                            >\n                                nazov\n                            </button>\n                            <button\n                                onClick={this.changeSearchHandler.bind(\n                                    null,\n                                    magicStrings.CODE\n                                )}\n                                className={\n                                    this.state.searchBy === magicStrings.CODE\n                                        ? 'btn btn--small u-margin-left-xsm'\n                                        : 'btn btn--small u-margin-left-xsm btn--outline-violet'\n                                }\n                            >\n                                kod\n                            </button>\n                        </div>\n                        <input\n                            placeholder=\"min. 3 znaky\"\n                            value={this.state.searchString}\n                            onChange={this.inputChangeHandler}\n                            name=\"searchString\"\n                            className=\"search-code__input\"\n                            type=\"text\"\n                            autoFocus\n                        />\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    renderOpenButton() {\n        if (!this.state.opened) {\n            return (\n                <button\n                    onClick={() => this.setState({ opened: true })}\n                    className=\"btn\"\n                >\n                    vyhladat polozku\n                </button>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"search-code\">\n                {this.renderOpenButton()}\n                {this.renderForm()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        items: state.store.items\n    };\n};\n\nexport default connect(mapStateToProps)(SearchBox);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../actions';\n\nimport Navigation from './Navigation';\nimport Store from './Store/Store';\nimport AddStoreItem from './Store/AddStoreItem';\nimport Receipts from './Receipts/Receipts';\nimport Receipt from './Receipts/Receipt';\nimport ReceiptHeaderForm from './Receipts/ReceiptHeaderForm';\nimport IssueCards from './IssueCards/IssueCards';\nimport IssueCard from './IssueCards/IssueCard';\nimport IssueCardHeaderForm from './IssueCards/IssueCardHeaderForm';\nimport Landing from './Landing';\nimport SearchBox from './SearchBox';\n\nclass App extends Component {\n    componentDidMount() {\n        if (!this.props.items || !this.props.items.length) {\n            this.props.onFetchStoreData();\n        }\n        if (!this.props.issueCards || !this.props.issueCards.length) {\n            this.props.onFetchIssueCards();\n        }\n    }\n\n    renderError() {\n        if (this.props.error) {\n            return (\n                <div className=\"flash-message flash-message--error\">\n                    {this.props.error}\n                    <button\n                        className=\"flash-message__btn\"\n                        onClick={this.props.onDismissError}\n                    >\n                        X\n                    </button>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    renderMessage() {\n        if (this.props.message) {\n            return (\n                <div className=\"flash-message flash-message--success\">\n                    {this.props.message}\n                    <button\n                        className=\"flash-message__btn\"\n                        onClick={this.props.onDismissMessage}\n                    >\n                        X\n                    </button>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <div className=\"container\">\n                        <div className=\"container__left\">\n                            <Navigation />\n                        </div>\n                        <div className=\"container__right\">\n                            {this.renderError()}\n                            {this.renderMessage()}\n\n                            <Route exact path=\"/\" component={Landing} />\n\n                            <Route exact path=\"/store\" component={Store} />\n                            <Route\n                                path=\"/store/add-item\"\n                                component={AddStoreItem}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/receipts\"\n                                component={Receipts}\n                            />\n                            <Route\n                                path=\"/receipts/add\"\n                                component={ReceiptHeaderForm}\n                            />\n                            <Route\n                                path=\"/receipts/detail/:id\"\n                                component={Receipt}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/issue-cards\"\n                                component={IssueCards}\n                            />\n                            <Route\n                                path=\"/issue-cards/add\"\n                                component={IssueCardHeaderForm}\n                            />\n                            <Route\n                                path=\"/issue-cards/detail/:id\"\n                                component={IssueCard}\n                            />\n                        </div>\n\n                        <SearchBox />\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.app.error,\n        message: state.app.message,\n        storeItems: state.store.items,\n        issueCards: state.issueCards.items\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDismissError: () => dispatch(actions.dismissError()),\n        onDismissMessage: () => dispatch(actions.dismissMessage()),\n        onFetchStoreData: () => dispatch(actions.fetchStoreData()),\n        onFetchIssueCards: () => dispatch(actions.fetchIssueCards())\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import './styles/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport reducer from './reducers';\nimport App from './components/App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}